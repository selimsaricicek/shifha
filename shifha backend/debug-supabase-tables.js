const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function debugTables() {
  console.log("üîç Supabase tablolarƒ±nƒ± kontrol ediyorum...\n");

  // 1. patient_profiles tablosundaki t√ºm kayƒ±tlarƒ± kontrol et
  console.log("üìã patient_profiles tablosu:");
  const { data: patients, error: patientsError } = await supabase
    .from('patient_profiles')
    .select('*')
    .limit(10);

  if (patientsError) {
    console.log("‚ùå patient_profiles hatasƒ±:", patientsError);
  } else {
    console.log(`‚úÖ ${patients.length} kayƒ±t bulundu`);
    if (patients.length > 0) {
      console.log("ƒ∞lk kayƒ±t √∂rneƒüi:", patients[0]);
      console.log("S√ºtun adlarƒ±:", Object.keys(patients[0]));
    }
  }

  console.log("\n" + "=".repeat(50) + "\n");

  // 2. Belirli TC'leri ara
  console.log("üîç Belirli TC'leri arƒ±yorum:");
  const targetTCs = ['12345678901', '98765432109'];
  
  for (const tc of targetTCs) {
    const { data: tcData, error: tcError } = await supabase
      .from('patient_profiles')
      .select('*')
      .eq('tc_kimlik_no', tc);

    if (tcError) {
      console.log(`‚ùå TC ${tc} arama hatasƒ±:`, tcError);
    } else {
      console.log(`üîç TC ${tc}: ${tcData.length} kayƒ±t bulundu`);
      if (tcData.length > 0) {
        console.log("  Kayƒ±t:", tcData[0]);
      }
    }
  }

  console.log("\n" + "=".repeat(50) + "\n");

  // 3. Organization ID ile filtreleme
  const orgId = '5f31d554-1a63-4128-a7c3-8b6d49b91cab';
  console.log(`üè• Organization ID ${orgId} ile filtreleme:`);
  
  const { data: orgPatients, error: orgError } = await supabase
    .from('patient_profiles')
    .select('*')
    .eq('organization_id', orgId);

  if (orgError) {
    console.log("‚ùå Organization filtreleme hatasƒ±:", orgError);
  } else {
    console.log(`‚úÖ ${orgPatients.length} kayƒ±t bulundu`);
    if (orgPatients.length > 0) {
      console.log("ƒ∞lk kayƒ±t:", orgPatients[0]);
    }
  }

  console.log("\n" + "=".repeat(50) + "\n");

  // 4. Tablo ≈üemasƒ±nƒ± kontrol et
  console.log("üìä Tablo ≈üemasƒ± kontrol√º:");
  const { data: schema, error: schemaError } = await supabase
    .from('patient_profiles')
    .select('*')
    .limit(1);

  if (!schemaError && schema.length > 0) {
    console.log("Mevcut s√ºtunlar:", Object.keys(schema[0]));
  }
}

debugTables().catch(console.error);